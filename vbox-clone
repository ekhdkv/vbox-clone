#!/usr/local/bin/python

import xml.etree.ElementTree as ET
import uuid
import sys
import os.path
import subprocess
import re
import argparse
import shutil

argpar = argparse.ArgumentParser()
argpar.add_argument("machine", help="path to VirtualBox machine file")
argpar.add_argument("-n", dest="name", help="applies a new name to the machine")
argpar.add_argument("-f", dest="nobackup", help="the backup of original vm file will not be saved", action="store_true")
args = argpar.parse_args()

vboxname = args.machine

if not(os.path.isfile(vboxname)):
	sys.exit("Wrong filename")

class XmlNSWrapper:
	def __init__(self, path):
		self.path = path
		self.tree = ET.parse(path)
		self.root = self.tree.getroot()

		nmMatchObj = re.match( r'^{(.*)}', self.root.tag)
		if nmMatchObj:
			self.nmspace = nmMatchObj.group(1)
		else:
			self.nmspace = ''

	def getElementsByName(self, name = '', retFirst = False):
		elements = []
		for element in self.root.iter('{' + self.nmspace + '}' + name):
			elements.append(element)

		if retFirst:
			return elements[0]
		else:
			return elements

	def getElementAttrs(self, element):
		return element.attrib


	def setElement(self, element, attr, value):
		element.set(attr, value)

	def saveXml(self):
		ET.register_namespace('', self.nmspace)
		self.tree.write(self.path)

class UuidWrapper:
	@staticmethod
	def generateUuid():
		return '{' + str(uuid.uuid1()) + '}'

	@staticmethod
	def wrapUuid(uuid):
		return '{' + uuid + '}'


parser = XmlNSWrapper(vboxname)

machine = parser.getElementsByName('Machine', True)

# machine uuid
parser.setElement(machine, 'uuid', UuidWrapper.generateUuid())

# machine name
if args.name:
	parser.setElement(machine, 'name', args.name)

# media uuid
uuid_mapping = {};
for hdd in parser.getElementsByName('HardDisk'):

	hdd_attrs = parser.getElementAttrs(hdd)
	hdd_uuid = hdd_attrs['uuid']
	hdd_path = hdd_attrs['location']

	vboxmanage_lines = subprocess.check_output(['VBoxManage', 'internalcommands', 'sethduuid', hdd_path])
	matchObj = re.match( r'^UUID changed to: (.*)$', vboxmanage_lines)

	new_uid_vbox = ''
	if matchObj:
		new_uid_vbox = matchObj.group(1)
	else:
		raise Exception("Wrong hdd uuid")

	uuid_mapping[hdd_uuid] = UuidWrapper.wrapUuid(new_uid_vbox)
	parser.setElement(hdd, 'uuid', UuidWrapper.wrapUuid(new_uid_vbox))

for elem in parser.getElementsByName('Image'):
		att_uuid = elem.get('uuid')
		if att_uuid in uuid_mapping:
			parser.setElement(elem, 'uuid', uuid_mapping[att_uuid])

# saving original file
if not args.nobackup:
	shutil.copyfile(vboxname, vboxname + ".orig")

parser.saveXml()
